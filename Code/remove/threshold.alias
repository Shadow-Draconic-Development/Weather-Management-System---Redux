multiline
<drac2>


def main(input_list: list[str]):


    prefix = ctx.prefix
    footer = f"{prefix}weather remove threshold [location name] [season name] [wind/water] [threshold #]\n6/19/24 | ShadowsStride"

    if len(input_list) < 2:

        return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f 'Expected location name, season name, wind/water, and threshold' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""


    if (svar_dict := get_svar("weather_settings")):
        svar_dict = load_json(svar_dict) 

    else:
        return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f 'Weather settings does not exist' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""


    location_names = list(svar_dict.keys())
    location_names.remove("Settings")


    if (search_result := search_list(input_list[0], location_names)):
        if len(search_result) == 1:
            input_list[0] = search_result[0]

        else:

            found = False
            for match in search_result:
                if match.lower() != input_list[0].lower():
                    pass

                else:
                    input_list[0] = match
                    found = True
                    break
            
            if not found:

                output = "**Multiple Locations Found:**\n" + "\n".join(search_result)

                return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f '{output}' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""

    else:
       return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f 'That location does not exist' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""


    if (search_result := search_list(input_list[1], svar_dict[input_list[0]].keys())):
        if len(search_result) == 1:
            input_list[1] = search_result[0]

        else:

            found = False
            for match in search_result:
                if match.lower() != input_list[1].lower():
                    pass

                else:
                    input_list[1] = match
                    found = True
                    break
            
            if not found:

                output = "**Multiple Seasons Found:**\n" + "\n".join(search_result)

                return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f '{output}' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""

    else:
       return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f 'That season does not exist' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""


    if (search_result := search_list(input_list[2], ["wind", "water"])):
        if len(search_result) == 1:
            input_list[2] = f"{search_result[0]}_conditions"

        else:

            found = False
            for match in search_result:
                if match.lower() != input_list[2].lower():
                    pass

                else:
                    input_list[1] = f"{match}_conditions"
                    found = True
                    break
            
            if not found:

                output = "**Multiple Condition Types Found:**\n" + "\n".join(search_result)

                return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f '{output}' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""

    else:
       return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f 'That condition type does not exist' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""   


    if (search_result := search_list(input_list[3], svar_dict[input_list[0]][input_list[1]][input_list[2]].keys())):
        if len(search_result) == 1:
            input_list[3] = search_result[0]

        else:

            found = False
            for match in search_result:
                if match.lower() != input_list[3].lower():
                    pass

                else:
                    input_list[3] = match
                    found = True
                    break
            
            if not found:

                output = "**Multiple Seasons Found:**\n" + "\n".join(search_result)

                return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f '{output}' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""

    else:
       return f"{prefix}embed -title 'You Have Been Sneak Attacked By an Error' -f 'That threshold does not exist' -color '#CF142B' -footer '{footer}' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/error.png'", ""


    condition_name = svar_dict[input_list[0]][input_list[1]][input_list[2]].pop(input_list[3])


    thumb = randchoice(
        ["https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-System---Redux/main/Data/images/fall.png",
        "https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-system---Redux/main/Data/images/spring.png",
        "https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-system---Redux/main/Data/images/summer.png",
        "https://raw.githubusercontent.com/Shadow-Draconic-Development/Weather-Management-system---Redux/main/Data/images/winter.png"]
    )

    return f"{prefix}embed -title 'You Have Successfully Removed {condition_name}' -color '#39FF14' -footer '{footer}' -thumb '{thumb}'", f"{prefix}svar weather_settings {dump_json(svar_dict)}"


embed_str, svar_str = main(&ARGS&)


</drac2>
{{embed_str}}
{{svar_str}}