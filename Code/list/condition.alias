embed
<drac2>


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def main(input_list: list[str]):

    prefix = ctx.prefix
    footer = f"{prefix}weather list condition [water/wind/temp] | 7/5/24 | ShadowsStride"
    error_str = ""

    if (svar_dict := get_svar("weather_settings")):
        return f"Current Condition Settings", "None", "", footer

    else:
        svar_dict = load_json(svar_dict)


    if not "Settings" in svar_dict.keys():
        return "Current Condition Settings", "None", "", footer

    if len(input_list) == 0:
        input_list.append(randchoice(["temp", "wind", "water"]))

    if (search_result := search_list(input_list[0], ["temp", "wind", "water"])):

        if len(search_result) == 1:
            input_list[0] = search_result[0]

        else:
            input_list[0] = randchoice(["temp", "wind", "water"])
            error_str = "**Multiple Matches Found:**\n" + "\n".join(search_result)

    else:
        input_list[0] = randchoice(["temp", "wind", "water"])
        error_str = "Invalid condition type"

    if error_str != "":
        error_str += "\n"
        color = "#CF142B"

    else:
        color = ""


    if svar_dict["Settings"][input_list[0]] == dict():
        return f"Current {input_list[0].capitalize()} Condition Settings", f"{error_str}None", color, footer

    return f"Current {input_list[0].capitalize()} Condition Settings", error_str + "\n".join(list(svar_dict["Settings"][input_list[0]].keys())), color, footer

title, f, color, footer = main(&ARGS&)


</drac2>
-title "{{title}}"
-f "{{f}}"
-color "{{color}}"
-footer "{{footer}}"